{"level":"info","message":"Connected to MongoDB","service":"user-service"}
{"level":"info","message":"Listening on PORT : 4000","service":"user-service"}
{"level":"error","message":"Failed to connect to MongoDB The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","service":"user-service","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at _createMongoClient (/Users/farhatmahi/Documents/ProgrammingHero/university-management/university-management-auth-service/node_modules/mongoose/lib/connection.js:805:11)\n    at NativeConnection.openUri (/Users/farhatmahi/Documents/ProgrammingHero/university-management/university-management-auth-service/node_modules/mongoose/lib/connection.js:742:29)\n    at Mongoose.connect (/Users/farhatmahi/Documents/ProgrammingHero/university-management/university-management-auth-service/node_modules/mongoose/lib/index.js:406:15)\n    at /Users/farhatmahi/Documents/ProgrammingHero/university-management/university-management-auth-service/src/server.ts:8:20\n    at Generator.next (<anonymous>)\n    at /Users/farhatmahi/Documents/ProgrammingHero/university-management/university-management-auth-service/src/server.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/farhatmahi/Documents/ProgrammingHero/university-management/university-management-auth-service/src/server.ts:4:12)\n    at connect (/Users/farhatmahi/Documents/ProgrammingHero/university-management/university-management-auth-service/src/server.ts:20:12)\n    at Object.<anonymous> (/Users/farhatmahi/Documents/ProgrammingHero/university-management/university-management-auth-service/src/server.ts:18:1)"}
{"level":"info","message":"Connected to MongoDB","service":"user-service"}
{"level":"info","message":"Listening on PORT : 4000","service":"user-service"}
{"level":"info","message":"Connected to MongoDB","service":"user-service"}
{"level":"info","message":"Listening on PORT : 4000","service":"user-service"}
